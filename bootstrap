#!/usr/bin/env bash

export DOTFILES=$HOME/Developer/dotfiles

1_prompt_sudo() {
    sudo -v

    # Keep-alive: update existing `sudo` time stamp until `.osx` has finished
    while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

2_setup_ssh() {
    if [[ ! $(ls -A "$HOME/.ssh") ]]; then
        git_user=$(git config --get user.email)
        if [ -z "$git_user" ]; then read -r -p 'Enter your git email: ' git_user; fi
        ssh-keygen -t ed25519 -C "$git_user" -f "$HOME/.ssh/id_ed25519" -N ''
        eval "$(ssh-agent -s)"
        echo """Host *
  AddKeysToAgent yes
  IdentityFile ~/.ssh/id_ed25519""" > "$HOME/.ssh/config"
        pbcopy < "$HOME/.ssh/id_ed25519.pub"
        open -a Safari https://github.com/settings/keys
        echo 'Your ssh public key has been copied to the keyboard. Confirm when you have entered the key in GitHub (y)'
        while : ; do
            read -n 1 k <&1
            if [[ $k = y ]] ; then
                printf "\nContinuing setup\n"
                break
            else
                echo "Confirm when you have entered the key in GitHub"
            fi
        done
    fi
}

3_clone_dotfiles() {
    echo "Cloning dotfiles into $DOTFILES"
    cd $DOTFILES
    if [ $(git rev-parse --is-inside-work-tree) ]; then
        return
    fi
    git init
    git remote add origin git@github.com:namolnad/dotfiles.git
    git fetch origin
    git checkout -b master --track origin/master
    cd -
}

4_install_homebrew() {
    echo 'Checking if homebrew is installed'
    if ! [ -x "$(command -v brew)" ]; then
        echo 'Installing homebrew'
        PATH="/opt/homebrew/bin:$PATH"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        if [ -f /opt/homebrew/bin/brew ]; then
            eval "$(/opt/homebrew/bin/brew shellenv)"
        fi
    fi
}

5_setup_ruby_environment() {
    echo 'Installing rbenv'
    brew install rbenv
    ln -fs $DOTFILES/.rbenv/version $HOME/.rbenv
    echo 'Installing global ruby'
    rbenv install -s $(cat ~/.rbenv/version)
    eval "$(rbenv init -)"
    echo 'Installing bundler'
    gem install bundler
    rbenv rehash
}

6_install_applications() {
    echo 'Installing gems'
    bundle install
    echo 'Running brew bundle'
    brew bundle
    echo 'Symlinking dotfiles'
    stow config -t $HOME
    echo 'Starting services'
    brew services start --all
    echo 'Installing FZF'
    yes | $(brew --prefix)/opt/fzf/install
    echo 'Installing Oh My Zsh'
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    echo 'Cloning tmux plugin manager'
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
    echo 'Installing PJs'
    tmp_dir=$(mktemp -d)
    curl -fsSL -o $tmp_dir/PJs.zip https://github.com/acrookston/pjs/releases/download/v1.0.0/PJs.zip $tmp_dir
    unzip $tmp_dir/PJs.zip -d $tmp_dir
    mv $tmp_dir/PJs.app /Applications/
    rm -rf $tmp_dir
}

7_symlink_scripts() {
    echo 'Symlinking scripts'
    script_home=$HOME/Developer/Scripts
    destination=/usr/local/opt

    sudo mkdir -p $destination

    sudo ln -sf $script_home/git-stashfiles $destination
    sudo ln -sf $script_home/git-rebase-origin $destination
    sudo ln -sf $script_home/git-worktree-branch $destination
}

8_setup_system_settings() {
    echo 'Setting up system settings'
    $DOTFILES/.macOS
}

9_init_submodules() {
    echo 'Initializing all submodules'
    git submodule update --init --recursive
}

10_display_manual_tasks_remaining() {
    echo """
    Tasks remaining:
    1) Ensure Dropbox syncing is set up
    2) Point development application settings to \"$HOME/Dropbox/.dev_sync\"
    3) Grant full disk access to Alfred
    4) Install GPG Suite; set up GPG signing
    """
}

echo 'Bootstrapping machine'

# NOTE: Order is important
1_prompt_sudo
2_setup_ssh
3_clone_dotfiles
4_install_homebrew
5_setup_ruby_environment
6_install_applications
7_symlink_scripts
8_setup_system_settings
9_init_submodules
10_display_manual_tasks_remaining
