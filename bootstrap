#!/usr/bin/env bash

export DEV_ENV=$HOME/Developer/Environment

clone_dev_environment() {
    echo "Cloning dev environment into $DEV_ENV"
    cd $DEV_ENV
    if [ $(git rev-parse --is-inside-work-tree) ]; then
        return
    fi
    git init
    git remote add origin git@github.com:namolnad/dev-environment.git
    git fetch origin
    git checkout -b master --track origin/master
    cd -
}

create_directories() {
    echo 'Create custom_credentials directory (if not exists)'
    mkdir -p $DEV_ENV/.custom_credentials
}

display_manual_tasks_remaining() {
    echo """
    Tasks remaining:
    1) Set up SSH (precursor to this script)
    2) Ensure Dropbox syncing is set up
    3) Point development application settings to \"$DEV_ENV/Dropbox/.dev_sync\"
    4) Grant full disk access to Alfred
    5) Install GPG Suite; set up GPG signing
    """
}

init_submodules() {
    echo 'Initializing all submodules'
    git submodule update --init --recursive
}

install_automator_tasks() {
    echo 'Installing automator tasks'
    # TODO: Install tasks from Dans-scripts
    # See https://apple.stackexchange.com/questions/343258/how-to-deploy-automator-workflow-to-clients for migration tactics
}

install_dependencies() {
    echo 'Installing gems'
    bundle install
    echo 'Running brew bundle'
    brew bundle
    echo 'Installing FZF'
    yes | $(brew --prefix)/opt/fzf/install
    echo 'Installing Oh My Zsh'
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    echo 'Installing go jira'
    sh -c 'go get github.com/go-jira/jira/cmd/jira'
}

install_homebrew() {
    echo 'Checking if homebrew is installed'
    if ! [ -x "$(command -v brew)" ]; then
        echo 'Installing homebrew'
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
}

setup_non_vim_editors() {
    echo 'Installing TabNine for VSCode'
    # TODO: Install TabNine (also for vscode)
}

setup_ruby_environment() {
    echo 'Installing rbenv'
    brew install rbenv
    echo 'Installing global ruby'
    rbenv install -s $(cat ~/.rbenv/version)
    eval "$(rbenv init -)"
    echo 'Installing bundler'
    gem install bundler
    rbenv rehash
}

setup_system_settings() {
    $DEV_ENV/.macOS
}

setup_vim() {
    # TODO: Evaluate whether MacVim should be used along with iCompleteMe (and remove vim from Brewfile is so)
    # MacVim install
    # Move mvim script to /usr/local/bin
    # Symlink mvim script to vim
    #####
    # Install plugins
    vim -c 'PluginInstall' -c 'qa!'
}

symlink_customizations() {
    # Remove existing directory symlinks if exists
    rm -rf $HOME/.vim $HOME/Developer/Scripts

    mkdir -p $HOME/.oh-my-zsh/custom/themes
    mkdir -p $HOME/.oh-my-zsh/custom/plugins

    # Setup symlinks
    ln -fs $DEV_ENV/.bashrc $HOME/.bashrc
    ln -fs $DEV_ENV/.bash_profile $HOME/.bash_profile
    ln -fs $DEV_ENV/.oh-my-zsh/custom/*.zsh $HOME/.oh-my-zsh/custom
    ln -fs $DEV_ENV/.oh-my-zsh/custom/themes/* $HOME/.oh-my-zsh/custom/themes
    ln -fs $DEV_ENV/.oh-my-zsh/custom/plugins/* $HOME/.oh-my-zsh/custom/plugins
    ln -fs $DEV_ENV/.vim $HOME/.vim
    ln -fs $DEV_ENV/.vimrc $HOME/.vimrc
    ln -fs $DEV_ENV/.xvimrc $HOME/.xvimrc
    ln -fs $DEV_ENV/.zshrc $HOME/.zshrc
    ln -fs $DEV_ENV/.ripgreprc $HOME/.ripgreprc
    ln -fs $DEV_ENV/Scripts $HOME/Developer/Scripts
}

symlink_scripts() {
    script_home=$HOME/Developer/Scripts
    destination=/usr/local/bin

    ln -s $script_home/git-stashfiles $destination
    ln -s $script_home/git-rebase-origin $destination
}

echo 'Bootstrapping machine'

# NOTE: Order is important
create_directories
clone_dev_environment
install_homebrew
setup_ruby_environment
install_dependencies
symlink_customizations
symlink_scripts
setup_system_settings
init_submodules
install_automator_tasks
setup_non_vim_editors
display_manual_tasks_remaining
